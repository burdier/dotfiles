set nu
set relativenumber
set cursorline
so ~/.config/nvim/coc.vim

" Change <leader> key to space
let mapleader = "\<space>"
" Change <localleader> key to backslash i.e. \
let maplocalleader = ','
let g:OmniSharp_server_stdio = 1
let g:rainbow_active = 1 "set to 0 if you want to enable it later via :RainbowToggle

" In ~/.vim/ftplugin/javascript.vim, or somewhere similar.

" NerdTree Toggle
nnoremap <silent> <C-n> :NERDTreeToggle<CR>

" Easy motion
nmap <silent> <leader><leader>w <Plug>(easymotion-bd-w)
nmap <silent> <leader><leader>e <Plug>(easymotion-bd-e)

"ALE
"nmap <silent> <C-k> <Plug>(ale_previous_wrap)
nmap <silent> <C-j> <Plug>(ale_next_wrap)
nmap <silent> <C-k> <Plug>(ale_previous_wrap)
"you completeme
au FileType c,cpp nnoremap <buffer> <c-]> :YcmCompleter GoTo<CR>

" Fix files with prettier, and then ESLint.
let b:ale_fixers = ['prettier', 'eslint']
" Equivalent to the above.
let b:ale_fixers = {'javascript': ['prettier', 'eslint']}
let g:ale_completion_enabled = 1
let b:ale_fixers = {'c#': ['prettier']}
call plug#begin('~/.local/share/nvim/plugged')

Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plug 'junegunn/fzf.vim'
Plug 'sbdchd/neoformat'
Plug 'dracula/vim', { 'as': 'dracula' }
Plug 'severin-lemaignan/vim-minimap'
Plug 'OmniSharp/omnisharp-vim'
Plug 'andymass/vim-matchup'
Plug 'dense-analysis/ale'
"Plug 'Shougo/deoplete.nvim', { 'do': ':UpdateRemotePlugins' }
Plug 'luochen1990/rainbow'
Plug 'tpope/vim-surround'
Plug 'easymotion/vim-easymotion'
Plug 'bling/vim-airline'
Plug 'scrooloose/nerdtree'
Plug 'neoclide/coc.nvim', {'branch': 'release'}
call plug#end()

try
  colorscheme dracula
catch
endtry



